/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Model.PhongBan;
import service.PhongBanService;

/**
 *
 * @author asus
 */
public class DANHMUCPHONGBANView extends javax.swing.JFrame {
	PhongBanService phongBanService = new PhongBanService();
	DefaultTableModel defaultTableModel;

	/**
	 * Creates new form DANHMUCPHONGBANView
	 */
	public DANHMUCPHONGBANView() {
		setTitle("Cập nhật danh mục Phòng Ban");
		initComponents();
		loadData();
	}

	public void loadData() {
		defaultTableModel = new DefaultTableModel();
		defaultTableModel.addColumn("Mã Phòng Ban");
		defaultTableModel.addColumn("Tên Phòng Ban");
		List<PhongBan> data = phongBanService.findAll();
		for (PhongBan p : data) {
			Vector<Object> v = new Vector<Object>();
			v.add(p.getMaPhongBan());
			v.add(p.getTenPhongBan());
			defaultTableModel.addRow(v);
		}
		tablePhongBan.setModel(defaultTableModel);
		tablePhongBan.setDefaultEditor(Object.class, null);

		tablePhongBan.addKeyListener(new KeyAdapter() {
			@Override
			public void keyReleased(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_UP || e.getKeyCode() == KeyEvent.VK_DOWN) {
					int selectedIndex = tablePhongBan.getSelectedRow();
					displayDetails(selectedIndex);
				}
			}
		});
		tablePhongBan.addMouseListener(new MouseAdapter() {

			public void mouseClicked(MouseEvent e) {

				int selectedIndex = tablePhongBan.getSelectedRow();
				displayDetails(selectedIndex);

			}
		});
	}

	public void displayDetails(int selectedIndex) {
		String maPhongBan = (String) defaultTableModel.getValueAt(selectedIndex, 0);
		PhongBan p = phongBanService.findById(maPhongBan);

		fieldIdRoom.setText(p.getMaPhongBan());
		fieldNameRoom.setText(p.getTenPhongBan());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePhongBan = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fieldIdRoom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldNameRoom = new javax.swing.JTextField();
        addRoom = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        beckBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 500));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setText("Cập Nhật Phòng Ban");

        tablePhongBan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tablePhongBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Phòng Ban", "Tên Phòng Ban"
            }
        ));
        jScrollPane1.setViewportView(tablePhongBan);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel2.setText("Mã Phòng Ban:");

        fieldIdRoom.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel3.setText("Tên Phòng Ban:");

        fieldNameRoom.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(fieldIdRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldNameRoom)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fieldIdRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldNameRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addRoom.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        addRoom.setText("Thêm Phòng Ban");
        addRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        deleteBtn.setText("Xóa Phòng Ban");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        updateBtn.setText("Sửa Phòng Ban");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        beckBtn.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        beckBtn.setText("Trở về");
        beckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beckBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addRoom)
                        .addGap(122, 122, 122)
                        .addComponent(updateBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(beckBtn)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))))
            .addGroup(layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addRoom)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateBtn)
                        .addComponent(deleteBtn)
                        .addComponent(beckBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void addRoomActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addRoomActionPerformed
		String maPhongBan = fieldIdRoom.getText();
		String tenPhongBan = fieldNameRoom.getText();
		if (maPhongBan.isEmpty())
			JOptionPane.showMessageDialog(this, "Vui lòng nhập mã phòng ban", "Lỗi thêm phòng ban",
					JOptionPane.OK_OPTION);
		else if (tenPhongBan.isEmpty())
			JOptionPane.showMessageDialog(this, "Vui lòng nhập tên phòng ban", "Lỗi thêm phòng ban",
					JOptionPane.OK_OPTION);
		else if (phongBanService.findById(maPhongBan.trim()) != null)
			JOptionPane.showMessageDialog(this, "Mã phòng ban đã tồn tại", "Lỗi thêm phòng ban", JOptionPane.OK_OPTION);
		else if (phongBanService.findByName(tenPhongBan.trim()) != null)
			JOptionPane.showMessageDialog(this, "Tên phòng ban đã tồn tại", "Lỗi thêm phòng ban",
					JOptionPane.OK_OPTION);
		else {
			PhongBan phongBan = new PhongBan();
			phongBan.setMaPhongBan(maPhongBan);
			phongBan.setTenPhongBan(tenPhongBan);
			if (phongBanService.add(phongBan))
				loadData();
			else
				JOptionPane.showMessageDialog(this, "Thêm phòng ban không thành công, xem lỗi ở console",
						"Lỗi thêm phòng ban", JOptionPane.OK_OPTION);
		}
	}// GEN-LAST:event_addRoomActionPerformed

	private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_updateBtnActionPerformed
		String maPhongBan = fieldIdRoom.getText().trim();
		PhongBan p = phongBanService.findById(maPhongBan);
		if (maPhongBan.isEmpty())
			JOptionPane.showMessageDialog(this, "Vui lòng chọn phòng ban", "Lỗi xóa phòng ban",
					JOptionPane.OK_OPTION);
		else if (p == null)
			JOptionPane.showMessageDialog(this, "Phòng ban này không tồn tại ");
		else {
				String tenPhongBan=fieldNameRoom.getText().trim();
				PhongBan phongBan = new PhongBan();
				phongBan.setMaPhongBan(maPhongBan);
				phongBan.setTenPhongBan(tenPhongBan);
				if (phongBanService.update(phongBan)) {
					JOptionPane.showMessageDialog(this, "Cập nhật thành công",
							"Thông báo", JOptionPane.INFORMATION_MESSAGE);
					loadData();
				} else {
					JOptionPane.showMessageDialog(this, "Cập nhật không thành công", "Thông báo",
							JOptionPane.OK_OPTION);
				}

			}
		
	}// GEN-LAST:event_updateBtnActionPerformed

	private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteBtnActionPerformed
		String maPhongBan = fieldIdRoom.getText().trim();
		PhongBan p = phongBanService.findById(maPhongBan);
		if (maPhongBan.isEmpty())
			JOptionPane.showMessageDialog(this, "Vui lòng nhập mã phòng ban muốn xóa", "Lỗi xóa phòng ban",
					JOptionPane.OK_OPTION);
		else if (p == null)
			JOptionPane.showMessageDialog(this, "Phòng ban bạn muốn  xóa không tồn tại");
		else {
			if (JOptionPane.showConfirmDialog(this, "Bạn có thật sự muốn xóa phòng ban : " + maPhongBan, "Xác nhận xóa",
					JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {

				if (phongBanService.delete(maPhongBan)) {
					JOptionPane.showMessageDialog(this, "Xóa phòng ban: " + p.getTenPhongBan() + " thành công",
							"Xóa thành công", JOptionPane.INFORMATION_MESSAGE);
					loadData();
				} else {
					JOptionPane.showMessageDialog(this, "Xóa phòng ban: " + p.getTenPhongBan() + " không thành công", "Lỗi",
							JOptionPane.OK_OPTION);
				}

			}
		}

	}// GEN-LAST:event_deleteBtnActionPerformed

	private void beckBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_beckBtnActionPerformed
		HETHONGView heThongView = new HETHONGView();
		heThongView.setVisible(true);
		heThongView.setLocationRelativeTo(null);
		heThongView.setResizable(false);
		this.dispose();
	}// GEN-LAST:event_beckBtnActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(DANHMUCPHONGBANView.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(DANHMUCPHONGBANView.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(DANHMUCPHONGBANView.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(DANHMUCPHONGBANView.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				DANHMUCPHONGBANView danhMucPhongBan = new DANHMUCPHONGBANView();
				danhMucPhongBan.setVisible(true);
				danhMucPhongBan.setLocationRelativeTo(null);
				danhMucPhongBan.setResizable(false);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoom;
    private javax.swing.JButton beckBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fieldIdRoom;
    private javax.swing.JTextField fieldNameRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePhongBan;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
